---
service: pokeshop-api-demo
frameworkVersion: "3"

plugins:
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-vpc-plugin

useDotenv: true

custom:
  databaseName: "pokeshop"
  databaseUsername: "ashketchum"
  databasePassword: "squirtle123"
  databaseEndpoint:
    Fn::GetAtt: [PokeDatabase, "Endpoint.Address"]
  vpcConfig:
    cidrBlock: "10.0.0.0/16"
    createNetworkAcl: false
    createDbSubnet: true
    createNatInstance: true
    zones:
      - us-east-1a
      - us-east-1b
    subnetGroups:
      - rds
      - elasticache

provider:
  name: aws
  runtime: nodejs20.x
  environment:
    NODE_OPTIONS: --require ./src/setup
    COLLECTOR_ENDPOINT: ${env:TRACETEST_AGENT_ENDPOINT}
    DATABASE_URL:
      Fn::Join:
        - ""
        - - "postgres://"
          - ${self:custom.databaseUsername}
          - ":"
          - ${self:custom.databasePassword}
          - "@"
          - ${self:custom.databaseEndpoint}
          - "/"
          - ${self:custom.databaseName}
          - "?schema=public"
    SQS_QUEUE_URL: { Ref: AssetsQueue }
    POKE_API_BASE_URL: "https://pokeapi.co/api/v2"
    REDIS_URL:
      Fn::GetAtt: [PokeCache, "RedisEndpoint.Address"]
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:*
          Resource:
            Fn::GetAtt: [AssetsQueue, Arn]

functions:
  get:
    handler: ./src/handler.get
    events:
      - httpApi:
          path: /pokemon
          method: get
  create:
    handler: ./src/handler.create
    events:
      - httpApi:
          path: /pokemon
          method: post
  import:
    handler: ./src/handler.importPokemon
    events:
      - httpApi:
          path: /pokemon/import
          method: post
  worker:
    handler: ./src/handler.worker
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - AssetsQueue
              - Arn

  # update:
  #   handler: ./src/handler.update
  #   events:
  #     - httpApi:
  #         path: /pokemon/{id}
  #         method: patch
  # remove:
  #   handler: ./src/handler.remove
  #   events:
  #     - httpApi:
  #         path: /pokemon/{id}
  #         method: delete
  # featured:
  #   handler: ./src/handler.featured
  #   events:
  #     - httpApi:
  #         path: /pokemon/featured
  #         method: get

resources:
  - ${file(./infra/rds.yml)}
  - ${file(./infra/queue.yml)}
  - ${file(./infra/elasticache.yml)}
