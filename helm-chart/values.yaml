# Default values for pokemon-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: kubeshop/demo-pokemon-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

env:
  - name: COLLECTOR_ENDPOINT
    value: http://pokeshop-opentelemetry-collector:44317
  - name: DATABASE_URL
    value: postgresql://ashketchum:squirtle123@postgresql:5432/pokeshop?schema=public
  - name: REDIS_URL
    value: redis-headless
  - name: RABBITMQ_HOST
    value: guest:guest@rabbitmq-headless
  - name: POKE_API_BASE_URL
    value: https://pokeapi.co/api/v2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  rpcPort: 8082

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 250m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Dependencies configuration
kafka:
  resources:
    requests:
      cpu: 250m
      memory: 512Mi

postgresql:
  fullnameOverride: postgresql
  auth:
    username: ashketchum
    password: squirtle123
    database: pokeshop
  primary:
    service:
      clusterIP: None

redis:
  fullnameOverride: redis
  architecture: standalone
  auth:
    enabled: false
  master:
    service:
      clusterIP: None
  resources:
    requests:
      cpu: 250m
      memory: 512Mi

rabbitmq:
  fullnameOverride: rabbitmq
  image:
    registry: docker.io
    repository: rabbitmq
    tag: 3.10.5
    debug: false
    pullPolicy: IfNotPresent
    pullSecrets: []
  auth:
    username: guest
    password: guest
  resources:
    requests:
      cpu: 400m
      memory: 512Mi

opentelemetry-collector:
  mode: deployment

  image:
    repository: "otel/opentelemetry-collector-contrib"


  ports:
    otlp:
      enabled: true
      containerPort: 4317
      servicePort: 44317
      hostPort: 44317
      protocol: TCP
      appProtocol: grpc
    otlp-http:
      enabled: true
      containerPort: 4318
      servicePort: 44318
      hostPort: 44318
      protocol: TCP
    jaeger-compact:
      enabled: false
    jaeger-thrift:
      enabled: false
    jaeger-grpc:
      enabled: false
    zipkin:
      enabled: false

  config:
    receivers:
      otlp:
        protocols:
          http:
          grpc:

    processors:
      batch:
        timeout: 5s

    exporters:
      debug/noop:
        verbosity: normal
        sampling_initial: 0
        sampling_thereafter: 0

      debug:
        verbosity: detailed
      
      otlp/jaeger:
        endpoint: pokeshop-jaeger-collector:4317
        tls:
          insecure: true

    service:
      pipelines:
        logs:
          exporters: [debug/noop]
          processors: [memory_limiter, batch]
          receivers: [otlp]
        metrics:
          exporters: [debug/noop]
          processors: [memory_limiter, batch]
          receivers: [otlp,prometheus]
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp/jaeger]

jaeger:
  enabled: true
  provisionDataStore:
    cassandra: false
  allInOne:
    enabled: true

  storage:
    type: memory

  agent:
    enabled: false
  collector:
    enabled: false
  query:
    enabled: false
