# Default values for pokemon-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: kubeshop/demo-pokemon-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

env:
  - name: DATABASE_URL
    value: postgresql://ashketchum:squirtle123@demo-postgresql:5432/pokeshop?schema=public
  - name: REDIS_URL
    value: demo-redis-master
  - name: RABBITMQ_HOST
    value: guest:guest@demo-rabbitmq-headless
  - name: POKE_API_BASE_URL
    value: https://pokeapi.co/api/v2
  - name: COLLECTOR_ENDPOINT
    value: collector.tracetest.svc.cluster.local
  - name: ZIPKIN_URL
    value: http://jaeger-agent.tracetest.svc.cluster.local:9411

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  rpcPort: 8082

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Dependencies configuration
postgresql:
  auth:
    username: ashketchum
    password: squirtle123
    database: pokeshop
  primary:
    service:
      clusterIP: None

redis:
  architecture: standalone
  auth:
    enabled: false
  master:
    service:
      clusterIP: None

rabbitmq:
  image:
    registry: docker.io
    repository: rabbitmq
    tag: 3.10.5
    debug: false
    pullPolicy: IfNotPresent
    pullSecrets: []
  auth:
    username: guest
    password: guest
