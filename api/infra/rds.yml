Resources:
  AppSecurityGroupEgressRDS:
    Type: "AWS::EC2::SecurityGroupEgress"
    Properties:
      Description: "permit PostgreSQL (5432) to DBSecurityGroup"
      DestinationSecurityGroupId: !Ref DBSecurityGroup
      FromPort: 5432
      GroupId: !GetAtt AppSecurityGroup.GroupId
      IpProtocol: tcp
      ToPort: 5432
  DBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "RDS Security Group"
      SecurityGroupEgress:
        - Description: "deny all outbound"
          IpProtocol: "-1"
          CidrIp: "127.0.0.1/32"
      SecurityGroupIngress:
        - Description: "permit PostgreSQL (5432) from AppSecurityGroup"
          FromPort: 5432
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt AppSecurityGroup.GroupId
          ToPort: 5432
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", rds]]
      VpcId: !Ref VPC
  PokeDatabase:
    Type: "AWS::RDS::DBInstance"
    DependsOn: VPC
    Properties:
      DBName: ${self:custom.databaseName}
      AllocatedStorage: "5"
      PubliclyAccessible: true
      DBInstanceClass: "db.t3.micro"
      Engine: "Postgres"
      MasterUsername: ${self:custom.databaseUsername}
      MasterUserPassword: ${self:custom.databasePassword}
      DBSubnetGroupName: !Ref RDSSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
