Resources:
  AppSecurityGroupEgressCache:
    Type: "AWS::EC2::SecurityGroupEgress"
    Properties:
      Description: "permit Redis (5432) to CacheSecurityGroup"
      DestinationSecurityGroupId: !Ref CacheSecurityGroup
      FromPort: 6379
      GroupId: !GetAtt AppSecurityGroup.GroupId
      IpProtocol: tcp
      ToPort: 6379
  CacheSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Elasticache Security Group"
      SecurityGroupEgress:
        - Description: "deny all outbound"
          IpProtocol: "-1"
          CidrIp: "127.0.0.1/32"
      SecurityGroupIngress:
        - Description: "permit Redis (6379) from AppSecurityGroup"
          FromPort: 6379
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt AppSecurityGroup.GroupId
          ToPort: 6379
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", elasticache]]
      VpcId: !Ref VPC
  PokeCache:
    Type: "AWS::ElastiCache::CacheCluster"
    DependsOn: VPC
    Properties:
      ClusterName: ${self:custom.databaseName}
      Engine: redis
      CacheNodeType: cache.t2.micro
      NumCacheNodes: "1"
      CacheSubnetGroupName: !Ref ElastiCacheSubnetGroup
      VpcSecurityGroupIds:
        - !Ref CacheSecurityGroup
