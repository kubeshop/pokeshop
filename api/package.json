{
  "name": "PokeshopAPI",
  "version": "1.0.0",
  "description": "This is a demo application instrumented with Open Telemetry to generate traces based on PokeAPI",
  "main": "handler.js",
  "scripts": {
    "generate:proto": "cd ./protos && protoc --plugin=../node_modules/.bin/protoc-gen-ts_proto --ts_proto_out=../src/protos --ts_proto_opt=outputServices=grpc-js ./pokeshop.proto",
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon --watch 'src/**' --exec 'ts-node -r tsconfig-paths/register -r ./src/telemetry/setup.ts ./src/api.ts'",
    "start:worker": "nodemon --watch 'src/**' --exec 'ts-node -r tsconfig-paths/register -r ./src/telemetry/setup.ts ./src/worker.ts'",
    "start:stream-worker": "nodemon --watch 'src/**' --exec 'ts-node -r tsconfig-paths/register -r ./src/telemetry/setup.ts ./src/streamWorker.ts'",
    "start:rpc": "nodemon --watch 'src/**' --exec 'ts-node -r tsconfig-paths/register -r ./src/telemetry/setup.ts ./src/rpc.ts'",
    "build": "tsc --project tsconfig.json && tspath -f",
    "saveConfig": "node scripts/saveConfig.js",
    "rpc": "node --require ./telemetry/setup.js rpc.js",
    "api": "npm run saveConfig && node --require ./telemetry/setup.js api.js",
    "worker": "node --require ./telemetry/setup.js worker.js",
    "stream-worker": "node --require ./telemetry/setup.js streamWorker.js",
    "test:produce-stream-message": "ts-node -r tsconfig-paths/register -r ./src/scripts/produceStreamMessage.ts"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/amqplib": "^0.8.2",
    "@types/aws-lambda": "^8.10.118",
    "@types/debug": "^4.1.8",
    "@types/koa": "^2.13.6",
    "@types/lodash": "^4.14.195",
    "@types/node": "^17.0.24",
    "@types/validator": "^13.7.17",
    "aws-sdk": "^2.1397.0",
    "node-ts": "^5.1.2",
    "nodemon": "^1.3.3",
    "ts-node": "^10.7.0",
    "ts-proto": "^1.149.0",
    "tsconfig-paths": "^3.14.2",
    "tspath": "^1.2.10",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@grpc/grpc-js": "^1.8.15",
    "@koa/cors": "^3.3.0",
    "@koa/router": "^10.1.1",
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/auto-instrumentations-node": "^0.44.0",
    "@opentelemetry/exporter-jaeger": "^1.24.0",
    "@opentelemetry/exporter-trace-otlp-grpc": "^0.51.0",
    "@opentelemetry/instrumentation": "^0.51.0",
    "@opentelemetry/resources": "^1.24.0",
    "@opentelemetry/sdk-node": "^0.51.0",
    "@opentelemetry/sdk-trace-base": "^1.24.0",
    "@opentelemetry/semantic-conventions": "^1.24.0",
    "@types/node-fetch": "^2.6.4",
    "amqplib": "^0.8.0",
    "class-transformer": "^0.5.1",
    "class-transformer-validator": "^0.9.1",
    "class-validator": "^0.13.2",
    "debug": "^4.3.4",
    "dotenv": "^16.1.4",
    "file-type": "^16.5.3",
    "ioredis": "^4.28.5",
    "kafkajs": "^2.2.4",
    "koa": "^2.14.2",
    "koa-bodyparser": "^4.4.0",
    "koa-graphql": "^0.12.0",
    "koa-logger": "^3.2.1",
    "koa-mount": "^4.0.0",
    "koa-static": "^5.0.0",
    "lodash": "^4.17.21",
    "node-fetch": "^2.6.11",
    "pg": "^8.11.0",
    "reflect-metadata": "^0.1.13",
    "sequelize": "^6.32.0",
    "sequelize-typescript": "^2.1.3",
    "umzug": "^3.1.1"
  }
}
